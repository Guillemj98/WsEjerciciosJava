package modelo.interfaz;

import java.util.List;
import java.util.Scanner;

import modelo.entidad.Coche;
import modelo.entidad.Pasajero;
import modelo.entidad.TipoMotor;
import modelo.negocio.GestorCoche;
import modelo.negocio.GestorPasajero;

public class Inrterfaz {
	public static Inrterfaz instance;
	private Scanner scInt;
	private Scanner scStr;
	private GestorCoche carService;
	private GestorPasajero passengerService;

	private Inrterfaz() {
		scInt = new Scanner(System.in);
		scStr = new Scanner(System.in);
		carService = GestorCoche.getInstance();
		passengerService = GestorPasajero.getInstance();
	}

	public static Inrterfaz getInstance() {
		if(instance == null) {
			instance =  new Inrterfaz();
		}
		return instance;
	}

	public void runApp() {
		
		// Toda esta interfaz esta hecho por Dani Costas
		
		printSlowly("CARGANDO", 5);
		print3Points(5, 5);
		
		System.out.println("\n================================");
		System.out.println("|                              |");
		System.out.println("|       üåü MEN√ö PRINCIPAL üåü     |");
		System.out.println("|                              |");
		System.out.println("================================");

		printMainMenu();
		int opcion = validarOpcion(0, 7);



		while (opcion != 0) {

			switch (opcion) {
			case 1:
				altaCoche();
				printMainMenu();
				opcion = validarOpcion(0, 7);
				break;
			case 2:
				bajaCochePorId();
				printMainMenu();
				opcion = validarOpcion(0, 7);
				break;
			case 3:
				modificarCochePorID();
				printMainMenu();
				opcion = validarOpcion(0, 7);
				break;
			case 4:
				buscarCochePorId();
				printMainMenu();
				opcion = validarOpcion(0, 7);
				break;
			case 5:
				buscarCochePorMarca();
				printMainMenu();
				opcion = validarOpcion(0, 7);
				break;
			case 6:
				listarTodosLosCoches();
				printMainMenu();
				opcion = validarOpcion(0, 7);
				break;
			case 7:
				gestionPasajeros();
				return;
			default:
				break;
			}

		}

		System.out.println("\n===============================");
		System.out.println("       ‚ú® FIN DEL PROGRAMA ‚ú®    ");
		System.out.println("=================================");

	}
	
	private void gestionPasajeros() {
		
		System.out.println("\n==================================");
		System.out.println("      üöÄ MEN√ö DE PASAJEROS üöÄ       ");
		System.out.println("====================================");
		
		printPassengersMenu();
		int opcion = validarOpcion(0, 7);

		while (opcion != 0) {

			switch (opcion) {
			case 1:
				createPassenger();
				printPassengersMenu();
				opcion = validarOpcion(0, 7);
				break;
			case 2:
				deletePassengerById();
				printPassengersMenu();
				opcion = validarOpcion(0, 7);
				break;
			case 3:
				getPassengerById();
				printPassengersMenu();
				opcion = validarOpcion(0, 7);
				break;
			case 4:
				listAllPassengers();
				printPassengersMenu();
				opcion = validarOpcion(0, 7);
				break;
			case 5:
				addPassengerToCar1();
				printPassengersMenu();
				opcion = validarOpcion(0, 7);
				break;
			case 6:
				deletePassengerFromCar();
				printPassengersMenu();
				opcion = validarOpcion(0, 7);
				break;
			case 7:
				listPassengersFromCar1();
				printPassengersMenu();
				opcion = validarOpcion(0, 7);
				break;
			} // end switch-case;
		} // end while();
		runApp();
	}
	private Coche listPassengersFromCar1() {

		askUserIfShowCars();

		System.out.println();
		printSlowly("Elige el ID del coche del que quieres listar sus pasajeros: ", 5);
		int option = scInt.nextInt();
		
		Coche car = carService.selectById(option);
		List<Pasajero> passengerList = passengerService.listaPasajerosDelCoche(option);

		printlnSlowly("=============================================", 5);
		printlnSlowly("Lista de pasajeros del coche: ",5);
		printlnSlowly("     üöó " + car.getMarca() + " " + car.getModelo() + " (ID: " + car.getId() + ") üöó", 5);
		printlnSlowly("=============================================",5);

		for (Pasajero p : passengerList) {
			printlnSlowly(p.toString(), 5);
		}

		return car; 

	}


	private void deletePassengerFromCar() {
		Coche car = listPassengersFromCar1();
		System.out.println();

		int option;
		do {
			printSlowly("==============================================", 5);
			printSlowly("üîç Selecciona el ID del pasajero que quieres sacar del coche: ", 5);
			printSlowly("==============================================", 5);
			int passengerIDSelected = scInt.nextInt();
			Pasajero passenger = passengerService.getPasajeroById(passengerIDSelected);
			printSlowly("==============================================", 5);
			printSlowly("‚ú® Has seleccionado al pasajero: " + passenger.getNombre() + " (ID: " + passenger.getId() + ") ‚ú®", 5);
			printSlowly("==============================================", 5);

			printlnSlowly("¬øEst√°s seguro de querer eliminarlo? ü§î", 5);

			printSlowly("üî¥ Pulsa 1 para eliminarlo o üîÑ Pulsa 0 para elegir otra opci√≥n: ", 5);
			option = scInt.nextInt();
			Integer result = null;

			if (option == 1) {
				result = passengerService.borrarPasajeroCoche(passengerIDSelected);
				if (result == 0) {
					printlnSlowly("==============================================", 5);
					printlnSlowly("üéâ Pasajero " + passenger.getNombre() + " (ID: " + passenger.getId() + ") ha sido eliminado del coche: ", 5);
					printlnSlowly("     üöó " + car.getMarca() + " " + car.getModelo() + " (ID: " + car.getId() + ") üöó", 5);
					printlnSlowly("==============================================", 5);
				} else if (result == null) {
					printlnSlowly("==============================================", 5);
					printlnSlowly("‚ö†Ô∏è Ha ocurrido un error inesperado ‚ö†Ô∏è", 5);
					printlnSlowly("  Por favor, vuelva a intentarlo m√°s tarde.", 5);
					printlnSlowly("==============================================", 5);
				}
			}
		} while (option != 1);

	}

	private void addPassengerToCar1() {
		askUserIfShowPassengers();
		askUserIfShowCars();
		Pasajero passenger = null;
		Coche car = null;
		int option;
		Integer result = null;

		do {
			printSlowly("==============================================", 5);
			printSlowly("üîç Selecciona el ID del pasajero que quieres sacar del coche: ", 5);
			printSlowly("==============================================", 5);
			int carIDSelected = scInt.nextInt();
			car = carService.selectById(carIDSelected);
			printSlowly("==============================================================", 5);
			printSlowly("üöó Seleccione el ID del pasajero a a√±adir al coche: ", 5);
			printSlowly("     " + car.getMarca() + " " + car.getModelo() + " (ID: " + car.getId() + ")", 5);
			printSlowly("==============================================================", 5);
			int passengerIDSelected = scInt.nextInt();
			passenger = passengerService.getPasajeroById(passengerIDSelected);
			printlnSlowly("Desea confirmar los cambios?", 5);
			printSlowly("Pulsa 1 para confirmar o 0 para volver atr√°s: ", 5);
			option = scInt.nextInt();

			if (option == 1) {
				result = passengerService.addPasajeroCoche(passengerIDSelected, carIDSelected);
				if (result == 0) {
					printlnSlowly("===========================================", 5);
					printlnSlowly("‚úÖ Pasajero a√±adido correctamente ‚úÖ", 5);
					printlnSlowly("===========================================", 5);
				} else {
					printlnSlowly("==============================================", 5);
					printlnSlowly("‚ö†Ô∏è Ha ocurrido un error inesperado ‚ö†Ô∏è", 5);
					printlnSlowly("    Por favor, int√©ntelo de nuevo m√°s tarde.", 5);
					printlnSlowly("==============================================", 5);
				}
			}

		} while (option != 1);

		
	}

	
	private void listAllPassengers() {
		System.out.println("\n====================================");
		printlnSlowly("üåü Listar todos los pasajeros üåü", 5);
		System.out.println("====================================\n");

		List<Pasajero> passengerList = passengerService.selectAll();
		if (passengerList.size() == 0) {
			printlnSlowly("==============================================", 5);
			printlnSlowly("üö´ No hay ning√∫n pasajero en la Base de Datos üö´", 5);
			printlnSlowly("==============================================", 5);
		} else {
			printlnSlowly("==============================================", 5);
			printlnSlowly("‚è≥ Pulsa Enter para listar todos los pasajeros ‚è≥", 5);
			printlnSlowly("==============================================", 5);
			scStr.nextLine();
			System.out.println("");
			for (Pasajero p : passengerList) {
				printlnSlowly(p.toString(), 5);
			}
		}
		
		
	}

	private void getPassengerById() {
		
		printSlowly("==============================================", 5);
		printSlowly("üîç Selecciona el ID del pasajero que quieres consultar: ", 5);
		printSlowly("==============================================", 5);
		int passengerIDSelected = scInt.nextInt();
		Pasajero passenger = passengerService.getPasajeroById(passengerIDSelected);
		if (passenger != null) {
			// TODO falta controlar el return de getPassengerById, porque null es si hay I/O
			// Exception, pero deber√≠a devolver 1 si no hay ning√∫n pasajero con dicho ID
			printlnSlowly("Pasajero seleccionado: ", 5);
			printSlowly(passenger.toString(), 5);
		}

	}

	private void deletePassengerById() {
		askUserIfShowPassengers();
		int option;
		do {
			printSlowly("==============================================", 5);
			printSlowly("üîç Selecciona el ID del pasajero que quieres borrar ", 5);
			printSlowly("==============================================", 5);
			int passengerIDSelected = scInt.nextInt();
			Pasajero passenger = passengerService.getPasajeroById(passengerIDSelected);
			if (passenger != null) {
				// TODO falta controlar el return de getPassengerById, porque null es si hay I/O
				// Exception, pero deber√≠a devolver 1 si no hay ning√∫n pasajero con dicho ID
				printlnSlowly("Pasajero seleccionado: ", 5);
				printSlowly(passenger.toString(), 5);
			}

			printlnSlowly("===========================================", 5);
			printlnSlowly("‚ùó Est√°s seguro de querer eliminarlo? ‚ùó", 5);
			printlnSlowly("===========================================", 5);

			printSlowly("üî¥ Pulsa 1 para eliminarlo o üîÑ Pulsa 0 para elegir otra opci√≥n: ", 5);
			option = scInt.nextInt();
			Integer result = null;

			if (option == 1) {
				result = passengerService.borrarById(passengerIDSelected);
				if (result == 0) {
					printlnSlowly("==============================================", 5);
					printlnSlowly("‚úÖ Pasajero " + passenger.getNombre() + " (ID: " + passenger.getId() + ") eliminado correctamente. ‚úÖ", 5);
					printlnSlowly("==============================================", 5);
				} else if (result == null) {
					printlnSlowly("==============================================", 5);
					printlnSlowly("‚ö†Ô∏è Ha ocurrido un error inesperado ‚ö†Ô∏è", 5);
					printlnSlowly("    Vuelva a intentarlo m√°s tarde. üôá‚Äç‚ôÇÔ∏è", 5);
					printlnSlowly("==============================================", 5);

				}
			}
		} while (option != 1);

		
	}

	private void createPassenger() {
		Pasajero p = new Pasajero();
		int option;
		Integer result = null;

		do {
			printlnSlowly("==============================================", 5);
			printlnSlowly("üìù Cumplimenta los datos del pasajero a a√±adir: ", 5);
			printlnSlowly("==============================================", 5);

			printSlowly("- Nombre: ", 5);
			p.setNombre(scStr.nextLine());

			printSlowly("- Edad: ", 5);
			p.setEdad(scInt.nextInt());

			printSlowly("- Peso: ", 5);
			p.setPeso(scInt.nextDouble());

			printlnSlowly("==============================================", 5);
			printlnSlowly("üíæ ¬øQuieres guardar los datos? üíæ", 5);
			printlnSlowly("==============================================", 5);

			printSlowly("üîí Pulsa 1 para guardarlo o üîÑ Pulsa 0 para modificar los datos: ", 5);

			option = scInt.nextInt();
			if (option == 1) {
				result = passengerService.guardar(p);
				if (result == 1) {
					printlnSlowly("==============================================", 5);
					printlnSlowly("‚úÖ Pasajero creado correctamente ‚úÖ", 5);
					printlnSlowly("==============================================", 5);

				} else {
					printlnSlowly("==============================================", 5);
					printlnSlowly("‚ö†Ô∏è Ha ocurrido un error inesperado ‚ö†Ô∏è", 5);
					printlnSlowly("    Int√©ntelo de nuevo m√°s tarde. üôá‚Äç‚ôÇÔ∏è", 5);
					printlnSlowly("==============================================", 5);

				}
			}
		} while (option != 1);
		
	}
	private void askUserIfShowPassengers() {
		printlnSlowly("==============================================", 5);
		printlnSlowly("üîç ¬øQuieres mostrar todos los pasajeros primero? üîç", 5);
		printlnSlowly("==============================================", 5);

		printlnSlowly("Pulsa 1 para mostrar los pasajeros o", 5);
		printlnSlowly("üî¢ Pulsa 0 para introducir el ID del pasajero", 5);

		int option = scInt.nextInt();

		if (option == 1) {
			listAllPassengers();
		}
	}

	private void askUserIfShowCars() {
		printlnSlowly("==============================================", 5);
		printlnSlowly("üöó ¬øQuieres mostrar todos los coches primero? üöó", 5);
		printlnSlowly("==============================================", 5);

		printlnSlowly("Pulsa 1 para mostrar los coches o", 5);
		printlnSlowly("üî¢ Pulsa 0 para introducir el ID del coche", 5);

		int option = scInt.nextInt();

		if (option == 1) {
			listarTodosLosCoches();
		}
	}

	private void printMainMenu() {
		System.out.println("‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó");
		System.out.println("‚ïë              MEN√ö DE OPCIONES                 ‚ïë");
		System.out.println("‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£");
		System.out.println("‚ïë 0. ‚ùå Salir de la aplicaci√≥n                  ‚ïë");
		System.out.println("‚ïë 1. üöó Dar de alta coche                       ‚ïë");
		System.out.println("‚ïë 2. üóëÔ∏è  Dar de baja coche por ID               ‚ïë");
		System.out.println("‚ïë 3. ‚úèÔ∏è  Modificar coche por ID                 ‚ïë");
		System.out.println("‚ïë 4. üîç Buscar coche por ID                     ‚ïë");
		System.out.println("‚ïë 5. üîç Buscar coches por marca                 ‚ïë");
		System.out.println("‚ïë 6. üìã Listar todos los coches                 ‚ïë");
		System.out.println("‚ïë 7. üö∂ Gesti√≥n de Pasajeros                    ‚ïë");
		System.out.println("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù");
		System.out.print("üîÑ Seleccione una opci√≥n: ");

	}
	
	private void printPassengersMenu() {
		System.out.println("‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó");
		System.out.println("‚ïë        MEN√ö DE GESTI√ìN DE PASAJEROS          ‚ïë");
		System.out.println("‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£");
		System.out.println("‚ïë 0Ô∏è‚É£ - Volver al men√∫ principal                ‚ïë");
		System.out.println("‚ïë 1Ô∏è‚É£ - Crear nuevo pasajero                    ‚ïë");
		System.out.println("‚ïë 2Ô∏è‚É£ - Borrar pasajero por ID                  ‚ïë");
		System.out.println("‚ïë 3Ô∏è‚É£ - Consultar pasajero por ID               ‚ïë");
		System.out.println("‚ïë 4Ô∏è‚É£ - Listar todos los pasajeros              ‚ïë");
		System.out.println("‚ïë 5Ô∏è‚É£ - A√±adir pasajero a un coche              ‚ïë");
		System.out.println("‚ïë 6Ô∏è‚É£ - Eliminar el pasajero de un coche        ‚ïë");
		System.out.println("‚ïë 7Ô∏è‚É£ - Listar todos los pasajeros de un coche  ‚ïë");
		System.out.println("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù");
		System.out.print("üîë Seleccione una opci√≥n: ");


	}

	private void listarTodosLosCoches() {
		System.out.println("\n==============================================");
		printlnSlowly("üöó **Listar Todos los Coches** üöó", 5);
		printlnSlowly("==============================================", 5);


		List<Coche> listaCoches = carService.selectAll();
		if (listaCoches.size() == 0) {
			printlnSlowly("==============================================", 5);
			printlnSlowly("üö´ No hay ning√∫n coche en la Base de Datos üö´", 5);
			printlnSlowly("==============================================", 5);

		} else {
			printlnSlowly("==============================================", 5);
			printlnSlowly("üîÑ Pulsa Enter para listar todos los coches üöó", 5);
			printlnSlowly("==============================================", 5);

			scStr.nextLine();
			System.out.println("");
			for (Coche coche : listaCoches) {
				System.out.println(coche);
			}
		}

	}

	private void buscarCochePorId() {
		System.out.println("\n===========================");
		printlnSlowly("    Buscar coche por ID    ", 5);
		System.out.println("===========================\n");

		System.out.println("Seleccione el ID a buscar: ");
		int id = validarIntNoVacio("ID");
		Coche c = carService.selectById(id);
		if (c == null) {
			System.out.println("No se ha encontrado ning√∫n coche con el ID especificado.");
		} else {
			System.out.println("Coche seleccionado: ");
			System.out.println(c);
		}

	}

	private void buscarCochePorMarca() {
		System.out.println("\n===========================");
		printlnSlowly("   Buscar coche por marca  ", 5);
		System.out.println("===========================\n");

		printSlowly("Seleccione la marca a buscar: ", 25);
		String marca = validarStringNoVacio("Marca");
		List<Coche> listaCoches = carService.selectByMarca(marca);
		if (listaCoches.size() == 0) {
			printlnSlowly("No se ha encontrado ning√∫n coche con la marca especificada.", 25);
		} else {
			printlnSlowly("Coches con la marca " + marca + ": ", 25);
			for (Coche coche : listaCoches) {
				System.out.println(coche);
			}
		}

	}

	private void modificarCochePorID() {
		System.out.println("\n===========================");
		printlnSlowly("   Modificar coche por ID  ", 5);
		System.out.println("===========================\n");

		printlnSlowly("Seleccione el ID a modificar: ", 25);
		int id = validarIntNoVacio("ID");
		Coche c = carService.selectById(id);

		if (c == null) {
			printlnSlowly("No se ha encontrado ning√∫n coche con el ID especificado.", 25);
		} else {
			printlnSlowly("Coche seleccionado: ", 25);
			System.out.println(c.toString());
			printlnSlowly("¬øSeguro que quieres modificarlo?", 25);
			printlnSlowly("\n1. Modificarlo", 10);
			printlnSlowly("2. No modificarlo\n", 10);
			printSlowly("- Seleccione una opci√≥n: ", 25);
			int opcion = validarOpcion(1, 2);
			if (opcion == 1) {

				c = pedirDatosCoche();
				c.setId(id);
				int resultado = carService.updateById(c);
				
				if (resultado == 1) {
					printlnSlowly("Coche con id " + id + " modificado correctamente.", 25);
				} else {
					printlnSlowly("Ha ocurrido un error. Int√©ntelo de nuevo m√°s tarde.", 25);
				}
			}
		}

	}

	private void bajaCochePorId() {
		System.out.println("\n===========================");
		printlnSlowly("      Baja coche por ID    ", 5);
		System.out.println("===========================\n");

		printSlowly("Seleccione el ID a borrar: ", 25);
		int id = validarIntNoVacio("ID");
		Coche c = carService.selectById(id);

		if (c == null) {
			printSlowly("No se ha encontrado ning√∫n coche con el ID especificado.", 25);
		} else {
			printlnSlowly("Coche seleccionado: ", 25);
			System.out.println(c.toString());
			printlnSlowly("¬øSeguro que quieres eliminarlo?", 25);
			printlnSlowly("\n- 1. Eliminarlo", 10);
			printlnSlowly("- 2. No eliminarlo\n", 10);
			printSlowly("- Seleccione una opci√≥n: ", 25);
			int opcion = validarOpcion(1, 2);
			if (opcion == 1) {
				int resultado = carService.deleteById(id);
				if (resultado == 1) {
					printlnSlowly("Coche con ID " + id + " eliminado correctamente.", 25);
				} else {
					printlnSlowly("Ha ocurrido un error. Int√©ntelo de nuevo m√°s tarde.", 25);
				}
			}
		}

	}

	private void altaCoche() {
		System.out.println("\n===========================");
		printlnSlowly("    Dar de alta un coche   ", 5);
		System.out.println("===========================\n");
		Coche c = pedirDatosCoche();
		Integer resultado = carService.insert(c);
		if (resultado == 1) {
			printlnSlowly("\nCoche insertado correctamente.", 25);
		} else {
			printlnSlowly("Ha ocurrido un error. Int√©ntelo de nuevo m√°s tarde.", 25);
		}
	}


	private Coche pedirDatosCoche() {

		printSlowly("- Marca: ", 25);
		String marca = validarStringNoVacio("Marca");
		printSlowly("- Modelo: ", 25);
		String modelo = validarStringNoVacio("Modelo");
		printSlowly("- Kil√≥metros: ", 25);
		int kilometros = validarIntNoVacio("Kilometros");
		printSlowly("- Seleccione un motor: ", 25);
		TipoMotor motor = seleccionMotor();

		return new Coche(kilometros, marca, modelo, motor, kilometros, null);// Aqui tendra que ir la lista de pasajeros

	}

	private TipoMotor seleccionMotor() {
		printlnSlowly("\n\t1. Di√©sel", 25);
		printlnSlowly("\t2. Gasolina", 25);
		printlnSlowly("\t3. El√©ctrico", 25);
		printlnSlowly("\t4. H√≠brido", 25);
		printSlowly("- Opci√≥n: ", 25);
		int opcionMotor = scInt.nextInt();
		TipoMotor motor = null;

		switch (opcionMotor) {
		case 1:
			motor = TipoMotor.DIESEL;
			break;
		case 2:
			motor = TipoMotor.GASOLINA;
			break;
		case 3:
			motor = TipoMotor.ELECTRICO;
			break;
		case 4:
			motor = TipoMotor.HIBRIDO;
			break;
		
		}

		return motor;
	}

	private int validarIntNoVacio(String atributo) {
		int i = scInt.nextInt();

		while (i == 0) {
			printlnSlowly("Campo vac√≠o no v√°lido.", 25);
			printlnSlowly("- Introduce un valor para " + atributo, 25);
			i = scInt.nextInt();
		}
		return i;
	}

	private String validarStringNoVacio(String atributo) {

		String s = scStr.nextLine();

		while (s.isBlank()) {
			printlnSlowly("Campo vac√≠o no v√°lido.", 25);
			printlnSlowly("- Introduce un valor para " + atributo, 25);
			s = scStr.nextLine();
		}
		return s;
	}

	private int validarOpcion(int i, int j) {
		int opcion = scInt.nextInt();
		System.out.println("");
		while (opcion < i || opcion > j) {
			printlnSlowly("  [ERROR] Introduce una opci√≥n correcta", 25);
			System.out.println();
			printSlowly("- Introduce un n√∫mero entre " + i + " y " + j + ": ", 25);
			opcion = scInt.nextInt();
		}
		return opcion;
	}
	
	public static void print3Points(int time, int time2) {
		for (int i = 0; i < 3; i++) {
			try {
				Thread.sleep(time);
				System.out.print(".");
			} catch (InterruptedException e) {
				e.printStackTrace();
			}	
		}
		try {
			Thread.sleep(time2);
			System.out.print(" ");
		} catch (InterruptedException e) {
			e.printStackTrace();
		}

	}

	public static void printSlowly(String s, int time) {
		for (int i = 0; i < s.length(); i++) {
			try {
				Thread.sleep(time);
				System.out.print(s.charAt(i));
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
	}
	
	public static void printlnSlowly(String s, int time) {
		for (int i = 0; i < s.length(); i++) {
			try {
				Thread.sleep(time);
				System.out.print(s.charAt(i));
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
		System.out.println("");
	}

}
